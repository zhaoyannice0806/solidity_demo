{
	"id": "975b3cfe91d1d53b4e16a142d90cc46b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"IfElse.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >0.8.0;\n\ncontract IeElse {\n    function foo(int256 num) public pure returns (uint8) {\n        if (num < 10) {\n            return 0;\n        } else if (num < 20) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    function ternary(int256 num) public pure returns (uint8) {\n        return num < 10 ? 0 : (num < 20 ? 1 : 2);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"IfElse.sol": {
				"IeElse": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "num",
									"type": "int256"
								}
							],
							"name": "foo",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "num",
									"type": "int256"
								}
							],
							"name": "ternary",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"IfElse.sol\":57:409  contract IeElse {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"IfElse.sol\":57:409  contract IeElse {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c970b2f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf821d152\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"IfElse.sol\":79:287  function foo(int256 num) public pure returns (uint8) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IfElse.sol\":293:407  function ternary(int256 num) public pure returns (uint8) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IfElse.sol\":79:287  function foo(int256 num) public pure returns (uint8) {... */\n    tag_8:\n        /* \"IfElse.sol\":125:130  uint8 */\n      0x00\n        /* \"IfElse.sol\":152:154  10 */\n      0x0a\n        /* \"IfElse.sol\":146:149  num */\n      dup3\n        /* \"IfElse.sol\":146:154  num < 10 */\n      slt\n        /* \"IfElse.sol\":142:281  if (num < 10) {... */\n      iszero\n      tag_16\n      jumpi\n        /* \"IfElse.sol\":177:178  0 */\n      0x00\n        /* \"IfElse.sol\":170:178  return 0 */\n      swap1\n      pop\n      jump(tag_15)\n        /* \"IfElse.sol\":142:281  if (num < 10) {... */\n    tag_16:\n        /* \"IfElse.sol\":205:207  20 */\n      0x14\n        /* \"IfElse.sol\":199:202  num */\n      dup3\n        /* \"IfElse.sol\":199:207  num < 20 */\n      slt\n        /* \"IfElse.sol\":195:281  if (num < 20) {... */\n      iszero\n      tag_18\n      jumpi\n        /* \"IfElse.sol\":230:231  1 */\n      0x01\n        /* \"IfElse.sol\":223:231  return 1 */\n      swap1\n      pop\n      jump(tag_15)\n        /* \"IfElse.sol\":195:281  if (num < 20) {... */\n    tag_18:\n        /* \"IfElse.sol\":269:270  2 */\n      0x02\n        /* \"IfElse.sol\":262:270  return 2 */\n      swap1\n      pop\n        /* \"IfElse.sol\":79:287  function foo(int256 num) public pure returns (uint8) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"IfElse.sol\":293:407  function ternary(int256 num) public pure returns (uint8) {... */\n    tag_13:\n        /* \"IfElse.sol\":343:348  uint8 */\n      0x00\n        /* \"IfElse.sol\":373:375  10 */\n      0x0a\n        /* \"IfElse.sol\":367:370  num */\n      dup3\n        /* \"IfElse.sol\":367:375  num < 10 */\n      slt\n        /* \"IfElse.sol\":367:400  num < 10 ? 0 : (num < 20 ? 1 : 2) */\n      tag_21\n      jumpi\n        /* \"IfElse.sol\":389:391  20 */\n      0x14\n        /* \"IfElse.sol\":383:386  num */\n      dup3\n        /* \"IfElse.sol\":383:391  num < 20 */\n      slt\n        /* \"IfElse.sol\":383:399  num < 20 ? 1 : 2 */\n      tag_22\n      jumpi\n        /* \"IfElse.sol\":398:399  2 */\n      0x02\n        /* \"IfElse.sol\":383:399  num < 20 ? 1 : 2 */\n      jump(tag_23)\n    tag_22:\n        /* \"IfElse.sol\":394:395  1 */\n      0x01\n        /* \"IfElse.sol\":383:399  num < 20 ? 1 : 2 */\n    tag_23:\n        /* \"IfElse.sol\":367:400  num < 10 ? 0 : (num < 20 ? 1 : 2) */\n      jump(tag_24)\n    tag_21:\n        /* \"IfElse.sol\":378:379  0 */\n      0x00\n        /* \"IfElse.sol\":367:400  num < 10 ? 0 : (num < 20 ? 1 : 2) */\n    tag_24:\n        /* \"IfElse.sol\":360:400  return num < 10 ? 0 : (num < 20 ? 1 : 2) */\n      swap1\n      pop\n        /* \"IfElse.sol\":293:407  function ternary(int256 num) public pure returns (uint8) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_26:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:410   */\n    tag_28:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":399:404   */\n      dup2\n        /* \"#utility.yul\":388:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":416:536   */\n    tag_29:\n        /* \"#utility.yul\":488:511   */\n      tag_39\n        /* \"#utility.yul\":505:510   */\n      dup2\n        /* \"#utility.yul\":488:511   */\n      tag_28\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":481:486   */\n      dup2\n        /* \"#utility.yul\":478:512   */\n      eq\n        /* \"#utility.yul\":468:530   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":523:524   */\n      dup1\n        /* \"#utility.yul\":516:528   */\n      revert\n        /* \"#utility.yul\":468:530   */\n    tag_40:\n        /* \"#utility.yul\":416:536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":542:679   */\n    tag_30:\n        /* \"#utility.yul\":587:592   */\n      0x00\n        /* \"#utility.yul\":625:631   */\n      dup2\n        /* \"#utility.yul\":612:632   */\n      calldataload\n        /* \"#utility.yul\":603:632   */\n      swap1\n      pop\n        /* \"#utility.yul\":641:673   */\n      tag_42\n        /* \"#utility.yul\":667:672   */\n      dup2\n        /* \"#utility.yul\":641:673   */\n      tag_29\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":542:679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":685:1012   */\n    tag_7:\n        /* \"#utility.yul\":743:749   */\n      0x00\n        /* \"#utility.yul\":792:794   */\n      0x20\n        /* \"#utility.yul\":780:789   */\n      dup3\n        /* \"#utility.yul\":771:778   */\n      dup5\n        /* \"#utility.yul\":767:790   */\n      sub\n        /* \"#utility.yul\":763:795   */\n      slt\n        /* \"#utility.yul\":760:879   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":798:877   */\n      tag_45\n      tag_26\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":760:879   */\n    tag_44:\n        /* \"#utility.yul\":918:919   */\n      0x00\n        /* \"#utility.yul\":943:995   */\n      tag_46\n        /* \"#utility.yul\":987:994   */\n      dup5\n        /* \"#utility.yul\":978:984   */\n      dup3\n        /* \"#utility.yul\":967:976   */\n      dup6\n        /* \"#utility.yul\":963:985   */\n      add\n        /* \"#utility.yul\":943:995   */\n      tag_30\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":933:995   */\n      swap2\n      pop\n        /* \"#utility.yul\":889:1005   */\n      pop\n        /* \"#utility.yul\":685:1012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1018:1104   */\n    tag_31:\n        /* \"#utility.yul\":1053:1060   */\n      0x00\n        /* \"#utility.yul\":1093:1097   */\n      0xff\n        /* \"#utility.yul\":1086:1091   */\n      dup3\n        /* \"#utility.yul\":1082:1098   */\n      and\n        /* \"#utility.yul\":1071:1098   */\n      swap1\n      pop\n        /* \"#utility.yul\":1018:1104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1110:1222   */\n    tag_32:\n        /* \"#utility.yul\":1193:1215   */\n      tag_49\n        /* \"#utility.yul\":1209:1214   */\n      dup2\n        /* \"#utility.yul\":1193:1215   */\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1188:1191   */\n      dup3\n        /* \"#utility.yul\":1181:1216   */\n      mstore\n        /* \"#utility.yul\":1110:1222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1442   */\n    tag_10:\n        /* \"#utility.yul\":1317:1321   */\n      0x00\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1344:1353   */\n      dup3\n        /* \"#utility.yul\":1340:1358   */\n      add\n        /* \"#utility.yul\":1332:1358   */\n      swap1\n      pop\n        /* \"#utility.yul\":1368:1435   */\n      tag_51\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1421:1430   */\n      dup4\n        /* \"#utility.yul\":1417:1434   */\n      add\n        /* \"#utility.yul\":1408:1414   */\n      dup5\n        /* \"#utility.yul\":1368:1435   */\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1228:1442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122029a1884f79fd6e7cb6f3831eaa84d454800beb8e3d0e407457bac51be616ef3c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101bb8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80634c970b2f14610038578063f821d15214610068575b5f80fd5b610052600480360381019061004d9190610126565b610098565b60405161005f919061016c565b60405180910390f35b610082600480360381019061007d9190610126565b6100c6565b60405161008f919061016c565b60405180910390f35b5f600a8212156100aa575f90506100c1565b60148212156100bc57600190506100c1565b600290505b919050565b5f600a82126100e657601482126100de5760026100e1565b60015b6100e8565b5f5b9050919050565b5f80fd5b5f819050919050565b610105816100f3565b811461010f575f80fd5b50565b5f81359050610120816100fc565b92915050565b5f6020828403121561013b5761013a6100ef565b5b5f61014884828501610112565b91505092915050565b5f60ff82169050919050565b61016681610151565b82525050565b5f60208201905061017f5f83018461015d565b9291505056fea264697066735822122029a1884f79fd6e7cb6f3831eaa84d454800beb8e3d0e407457bac51be616ef3c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C970B2F EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF821D152 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x126 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x126 JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0xA DUP3 SLT ISZERO PUSH2 0xAA JUMPI PUSH0 SWAP1 POP PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x14 DUP3 SLT ISZERO PUSH2 0xBC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 SLT PUSH2 0xE6 JUMPI PUSH1 0x14 DUP3 SLT PUSH2 0xDE JUMPI PUSH1 0x2 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE8 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH2 0xF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120 DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0xEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148 DUP5 DUP3 DUP6 ADD PUSH2 0x112 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166 DUP2 PUSH2 0x151 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17F PUSH0 DUP4 ADD DUP5 PUSH2 0x15D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 LOG1 DUP9 0x4F PUSH26 0xFD6E7CB6F3831EAA84D454800BEB8E3D0E407457BAC51BE616EF EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "57:352:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_26": {
									"entryPoint": 152,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ternary_47": {
									"entryPoint": 198,
									"id": 47,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_int256": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1445:1",
										"nodeType": "YulBlock",
										"src": "0:1445:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:32:1",
													"nodeType": "YulBlock",
													"src": "378:32:1",
													"statements": [
														{
															"nativeSrc": "388:16:1",
															"nodeType": "YulAssignment",
															"src": "388:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "399:5:1",
																"nodeType": "YulIdentifier",
																"src": "399:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "334:76:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:76:1"
											},
											{
												"body": {
													"nativeSrc": "458:78:1",
													"nodeType": "YulBlock",
													"src": "458:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "514:16:1",
																"nodeType": "YulBlock",
																"src": "514:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "523:1:1",
																					"nodeType": "YulLiteral",
																					"src": "523:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			"nativeSrc": "516:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:1"
																		},
																		"nativeSrc": "516:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "481:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "481:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "505:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "505:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "488:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "488:16:1"
																				},
																				"nativeSrc": "488:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "488:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "478:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "478:2:1"
																		},
																		"nativeSrc": "478:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "478:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "471:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:1"
																},
																"nativeSrc": "471:42:1",
																"nodeType": "YulFunctionCall",
																"src": "471:42:1"
															},
															"nativeSrc": "468:62:1",
															"nodeType": "YulIf",
															"src": "468:62:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "416:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "451:5:1",
														"nodeType": "YulTypedName",
														"src": "451:5:1",
														"type": ""
													}
												],
												"src": "416:120:1"
											},
											{
												"body": {
													"nativeSrc": "593:86:1",
													"nodeType": "YulBlock",
													"src": "593:86:1",
													"statements": [
														{
															"nativeSrc": "603:29:1",
															"nodeType": "YulAssignment",
															"src": "603:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "625:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "612:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "612:12:1"
																},
																"nativeSrc": "612:20:1",
																"nodeType": "YulFunctionCall",
																"src": "612:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "603:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "603:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "667:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "641:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "641:25:1"
																},
																"nativeSrc": "641:32:1",
																"nodeType": "YulFunctionCall",
																"src": "641:32:1"
															},
															"nativeSrc": "641:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "641:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nativeSrc": "542:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "571:6:1",
														"nodeType": "YulTypedName",
														"src": "571:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "579:3:1",
														"nodeType": "YulTypedName",
														"src": "579:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "587:5:1",
														"nodeType": "YulTypedName",
														"src": "587:5:1",
														"type": ""
													}
												],
												"src": "542:137:1"
											},
											{
												"body": {
													"nativeSrc": "750:262:1",
													"nodeType": "YulBlock",
													"src": "750:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "796:83:1",
																"nodeType": "YulBlock",
																"src": "796:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "798:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "798:77:1"
																			},
																			"nativeSrc": "798:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "798:79:1"
																		},
																		"nativeSrc": "798:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "771:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "771:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "780:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "780:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "767:3:1"
																		},
																		"nativeSrc": "767:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "767:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "792:2:1",
																		"nodeType": "YulLiteral",
																		"src": "792:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "763:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:1"
																},
																"nativeSrc": "763:32:1",
																"nodeType": "YulFunctionCall",
																"src": "763:32:1"
															},
															"nativeSrc": "760:119:1",
															"nodeType": "YulIf",
															"src": "760:119:1"
														},
														{
															"nativeSrc": "889:116:1",
															"nodeType": "YulBlock",
															"src": "889:116:1",
															"statements": [
																{
																	"nativeSrc": "904:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "904:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "918:1:1",
																		"nodeType": "YulLiteral",
																		"src": "918:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "908:6:1",
																			"nodeType": "YulTypedName",
																			"src": "908:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "933:62:1",
																	"nodeType": "YulAssignment",
																	"src": "933:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "967:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "967:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "978:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "978:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "963:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "963:3:1"
																				},
																				"nativeSrc": "963:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "963:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "987:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "987:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nativeSrc": "943:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "943:19:1"
																		},
																		"nativeSrc": "943:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "943:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "933:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256",
												"nativeSrc": "685:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "720:9:1",
														"nodeType": "YulTypedName",
														"src": "720:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "731:7:1",
														"nodeType": "YulTypedName",
														"src": "731:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "743:6:1",
														"nodeType": "YulTypedName",
														"src": "743:6:1",
														"type": ""
													}
												],
												"src": "685:327:1"
											},
											{
												"body": {
													"nativeSrc": "1061:43:1",
													"nodeType": "YulBlock",
													"src": "1061:43:1",
													"statements": [
														{
															"nativeSrc": "1071:27:1",
															"nodeType": "YulAssignment",
															"src": "1071:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1086:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1086:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1093:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1093:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1082:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1082:3:1"
																},
																"nativeSrc": "1082:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1082:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1071:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1018:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1043:5:1",
														"nodeType": "YulTypedName",
														"src": "1043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1053:7:1",
														"nodeType": "YulTypedName",
														"src": "1053:7:1",
														"type": ""
													}
												],
												"src": "1018:86:1"
											},
											{
												"body": {
													"nativeSrc": "1171:51:1",
													"nodeType": "YulBlock",
													"src": "1171:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1188:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1188:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1209:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1209:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "1193:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "1193:15:1"
																		},
																		"nativeSrc": "1193:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1193:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1181:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:1"
																},
																"nativeSrc": "1181:35:1",
																"nodeType": "YulFunctionCall",
																"src": "1181:35:1"
															},
															"nativeSrc": "1181:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "1181:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "1110:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1159:5:1",
														"nodeType": "YulTypedName",
														"src": "1159:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1166:3:1",
														"nodeType": "YulTypedName",
														"src": "1166:3:1",
														"type": ""
													}
												],
												"src": "1110:112:1"
											},
											{
												"body": {
													"nativeSrc": "1322:120:1",
													"nodeType": "YulBlock",
													"src": "1322:120:1",
													"statements": [
														{
															"nativeSrc": "1332:26:1",
															"nodeType": "YulAssignment",
															"src": "1332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1344:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1344:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1340:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:1"
																},
																"nativeSrc": "1340:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1332:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1408:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1421:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1421:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1432:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1432:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1417:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:1"
																		},
																		"nativeSrc": "1417:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1417:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "1368:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "1368:39:1"
																},
																"nativeSrc": "1368:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1368:67:1"
															},
															"nativeSrc": "1368:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "1368:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1228:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1294:9:1",
														"nodeType": "YulTypedName",
														"src": "1294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1306:6:1",
														"nodeType": "YulTypedName",
														"src": "1306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1317:4:1",
														"nodeType": "YulTypedName",
														"src": "1317:4:1",
														"type": ""
													}
												],
												"src": "1228:214:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80634c970b2f14610038578063f821d15214610068575b5f80fd5b610052600480360381019061004d9190610126565b610098565b60405161005f919061016c565b60405180910390f35b610082600480360381019061007d9190610126565b6100c6565b60405161008f919061016c565b60405180910390f35b5f600a8212156100aa575f90506100c1565b60148212156100bc57600190506100c1565b600290505b919050565b5f600a82126100e657601482126100de5760026100e1565b60015b6100e8565b5f5b9050919050565b5f80fd5b5f819050919050565b610105816100f3565b811461010f575f80fd5b50565b5f81359050610120816100fc565b92915050565b5f6020828403121561013b5761013a6100ef565b5b5f61014884828501610112565b91505092915050565b5f60ff82169050919050565b61016681610151565b82525050565b5f60208201905061017f5f83018461015d565b9291505056fea264697066735822122029a1884f79fd6e7cb6f3831eaa84d454800beb8e3d0e407457bac51be616ef3c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C970B2F EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF821D152 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x126 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x126 JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0xA DUP3 SLT ISZERO PUSH2 0xAA JUMPI PUSH0 SWAP1 POP PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x14 DUP3 SLT ISZERO PUSH2 0xBC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 SLT PUSH2 0xE6 JUMPI PUSH1 0x14 DUP3 SLT PUSH2 0xDE JUMPI PUSH1 0x2 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE8 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH2 0xF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120 DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0xEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148 DUP5 DUP3 DUP6 ADD PUSH2 0x112 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166 DUP2 PUSH2 0x151 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17F PUSH0 DUP4 ADD DUP5 PUSH2 0x15D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 LOG1 DUP9 0x4F PUSH26 0xFD6E7CB6F3831EAA84D454800BEB8E3D0E407457BAC51BE616EF EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "57:352:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;79:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;293:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79:208;125:5;152:2;146:3;:8;142:139;;;177:1;170:8;;;;142:139;205:2;199:3;:8;195:86;;;230:1;223:8;;;;195:86;269:1;262:8;;79:208;;;;:::o;293:114::-;343:5;373:2;367:3;:8;:33;;389:2;383:3;:8;:16;;398:1;383:16;;;394:1;383:16;367:33;;;378:1;367:33;360:40;;293:114;;;:::o;88:117:1:-;197:1;194;187:12;334:76;370:7;399:5;388:16;;334:76;;;:::o;416:120::-;488:23;505:5;488:23;:::i;:::-;481:5;478:34;468:62;;526:1;523;516:12;468:62;416:120;:::o;542:137::-;587:5;625:6;612:20;603:29;;641:32;667:5;641:32;:::i;:::-;542:137;;;;:::o;685:327::-;743:6;792:2;780:9;771:7;767:23;763:32;760:119;;;798:79;;:::i;:::-;760:119;918:1;943:52;987:7;978:6;967:9;963:22;943:52;:::i;:::-;933:62;;889:116;685:327;;;;:::o;1018:86::-;1053:7;1093:4;1086:5;1082:16;1071:27;;1018:86;;;:::o;1110:112::-;1193:22;1209:5;1193:22;:::i;:::-;1188:3;1181:35;1110:112;;:::o;1228:214::-;1317:4;1355:2;1344:9;1340:18;1332:26;;1368:67;1432:1;1421:9;1417:17;1408:6;1368:67;:::i;:::-;1228:214;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "88600",
								"executionCost": "133",
								"totalCost": "88733"
							},
							"external": {
								"foo(int256)": "640",
								"ternary(int256)": "667"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 409,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 409,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 409,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122029a1884f79fd6e7cb6f3831eaa84d454800beb8e3d0e407457bac51be616ef3c64736f6c634300081a0033",
									".code": [
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "4C970B2F"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "F821D152"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 79,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 79,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 293,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 293,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 293,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 125,
											"end": 130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 154,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 146,
											"end": 149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 146,
											"end": 154,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 142,
											"end": 281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 142,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 142,
											"end": 281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 170,
											"end": 178,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 142,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 205,
											"end": 207,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 199,
											"end": 207,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 195,
											"end": 281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 195,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 230,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 223,
											"end": 231,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 269,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 79,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 293,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 367,
											"end": 370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 367,
											"end": 375,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 367,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 389,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 383,
											"end": 386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 383,
											"end": 391,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 383,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 383,
											"end": 399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 398,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 383,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 383,
											"end": 399,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 383,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 383,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 367,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 334,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 388,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 416,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 505,
											"end": 510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 488,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 478,
											"end": 512,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 468,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 468,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 542,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 612,
											"end": 632,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 603,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 641,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 641,
											"end": 673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 743,
											"end": 749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 771,
											"end": 778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 767,
											"end": 790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 763,
											"end": 795,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 760,
											"end": 879,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 760,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 760,
											"end": 879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 798,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 798,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 798,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 798,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 760,
											"end": 879,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 760,
											"end": 879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 987,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 963,
											"end": 985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 943,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 943,
											"end": 995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 943,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 933,
											"end": 995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1104,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1018,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1097,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1110,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1193,
											"end": 1215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1193,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1442,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1228,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1414,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1368,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1435,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1368,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"IfElse.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo(int256)": "4c970b2f",
							"ternary(int256)": "f821d152"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"num\",\"type\":\"int256\"}],\"name\":\"foo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"num\",\"type\":\"int256\"}],\"name\":\"ternary\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IfElse.sol\":\"IeElse\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IfElse.sol\":{\"keccak256\":\"0xe3e181e6ba85d77f59cea2db353525d9f73dfc540683ada13f32bfa4756c4a61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://911e62e3263446a3cd39a03c7f28212c804be28d323694f657d22f6d7e8a1856\",\"dweb:/ipfs/QmevYhrrsZwzmWAVhZkotGwvPmyfMbjtbTYAGFD4GBBt1E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"IfElse.sol": {
				"ast": {
					"absolutePath": "IfElse.sol",
					"exportedSymbols": {
						"IeElse": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IeElse",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "IeElse",
							"nameLocation": "66:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "132:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "146:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "152:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "146:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 14,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "199:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "205:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 22,
														"nodeType": "Block",
														"src": "248:33:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "269:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 7,
																"id": 21,
																"nodeType": "Return",
																"src": "262:8:0"
															}
														]
													},
													"id": 23,
													"nodeType": "IfStatement",
													"src": "195:86:0",
													"trueBody": {
														"id": 19,
														"nodeType": "Block",
														"src": "209:33:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "31",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "230:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 7,
																"id": 18,
																"nodeType": "Return",
																"src": "223:8:0"
															}
														]
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "142:139:0",
												"trueBody": {
													"id": 13,
													"nodeType": "Block",
													"src": "156:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "177:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 7,
															"id": 12,
															"nodeType": "Return",
															"src": "170:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4c970b2f",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "88:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "99:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "92:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "92:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "91:12:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "125:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 5,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "125:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:7:0"
									},
									"scope": 48,
									"src": "79:208:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "350:57:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 33,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "367:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3130",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "373:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "367:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 37,
																		"name": "num",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "383:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "3230",
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "389:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_20_by_1",
																			"typeString": "int_const 20"
																		},
																		"value": "20"
																	},
																	"src": "383:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "32",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "398:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "383:16:0",
																"trueExpression": {
																	"hexValue": "31",
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "394:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 43,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "382:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "367:33:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 32,
												"id": 45,
												"nodeType": "Return",
												"src": "360:40:0"
											}
										]
									},
									"functionSelector": "f821d152",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "302:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "317:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "310:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 27,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "310:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:12:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "343:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 30,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "343:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:7:0"
									},
									"scope": 48,
									"src": "293:114:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 49,
							"src": "57:352:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:378:0"
				},
				"id": 0
			}
		}
	}
}